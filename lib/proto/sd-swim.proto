/**
 * Supported base message types
 */
enum MessageType {
  JOIN = 0;
  JOIN_ACK = 1;
  PING = 2;
  ACK = 3;
  PING_REQ = 4;
  EXT = 5;
}

/**
 * Node states
 */
enum NodeState {
    Alive = 0;
    Suspect = 1;
    Faulty = 2;
}

message Node {
  optional string host = 1;
  optional int32 port = 2;
}

message Member {
  required Node node = 1;
  optional Node setBy = 2;
  optional NodeState state = 3 [default = 0];
  optional int32 incNumber = 4 [default = 0]; // incarnation number
  optional bytes uuid = 5;
}

message IndirectRequest {
  required Node target = 1;
  required Node requester = 2;
}

/**
 * SD-SWIM Protocol Message
 */
message Msg {
  optional Node destination = 1;
  required MessageType type = 2;
  repeated Member members = 3;            // The full list, is sent only in join_ack
  repeated Member updates = 4;            // To piggiback the updates
  optional IndirectRequest request = 5;   // Used for indirect pings (PIG_REQ) and related ACK
}

// METADATA DISTRIBUTION EXTENSION ******************************

/**
 * Supported extension message types.
 * UPDATE: Here some / all my metadata
 * ALL_METADATA: Please, send me allmetadata
 */
enum ExtMessageType {
  UPDATE = 0;
  ASK_ALL_META= 1;
}

message Value {
  required string key = 1;
  required string value = 2;
}

message Metadata {
  required Node Owner = 1;
  repeated Value value = 2;
  required int32 version = 3; // Only the owner can update the version
}

message ExtMsg {
  optional Node destination = 1;
  required ExtMessageType type = 2;
  repeated Metadata data = 3;
}
